name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  node-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: energex
          MYSQL_USER: app
          MYSQL_PASSWORD: app
        ports: [ '3306:3306' ]
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports: [ '6379:6379' ]
    defaults:
      run:
        working-directory: backend-node
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend-node/package-lock.json
      - run: npm ci
      - run: npm test -- --ci --runInBand
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: energex
          DB_USERNAME: app
          DB_PASSWORD: app
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379

  php-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: energex
          MYSQL_USER: app
          MYSQL_PASSWORD: app
        ports: [ '3306:3306' ]
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports: [ '6379:6379' ]
    defaults:
      run:
        working-directory: backend-lumen
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, tokenizer, bcmath, json
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('backend-lumen/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist
      - name: Create cache directories
        run: |
          mkdir -p bootstrap/cache
          mkdir -p storage/logs
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/views
          chmod -R 775 bootstrap/cache
          chmod -R 775 storage
      - name: Setup environment
        run: |
          cp .env.example .env || echo "No .env.example found, creating .env"
          echo "APP_NAME=Lumen" >> .env
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=base64:YXNkZmFzZGZhc2RmYXNkZmFzZGZhc2RmYXNkZmFzZGY=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env
          echo "APP_TIMEZONE=UTC" >> .env
          echo "" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=energex" >> .env
          echo "DB_USERNAME=app" >> .env
          echo "DB_PASSWORD=app" >> .env
          echo "" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "" >> .env
          echo "JWT_SECRET=ChangeThisSecretKeyForProduction123456789012" >> .env
          echo "JWT_TTL=60" >> .env
          echo "JWT_REFRESH_TTL=20160" >> .env
          echo "JWT_ALGO=HS256" >> .env
      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -u app -papp --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done
      - name: Run migrations
        run: php artisan migrate --force
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: energex
          DB_USERNAME: app
          DB_PASSWORD: app
      - name: Clear and cache config
        run: |
          php artisan cache:clear || true
          php artisan lighthouse:cache || true
      - name: Run PHPUnit
        run: vendor/bin/phpunit --testdox
        env:
          APP_ENV: testing
          APP_KEY: base64:YXNkZmFzZGZhc2RmYXNkZmFzZGZhc2RmYXNkZmFzZGY=
          JWT_SECRET: ChangeThisSecretKeyForProduction123456789012
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: energex
          DB_USERNAME: app
          DB_PASSWORD: app
          CACHE_DRIVER: array
          QUEUE_CONNECTION: sync